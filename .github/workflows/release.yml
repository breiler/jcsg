# test
name: Publish package to Maven
on: 
   push:
       tags:       
         - '*'

jobs:

  publish:
    runs-on: ubuntu-latest 
    permissions: 
      contents: write
      packages: write 
    steps:
      - uses: actions/checkout@v3
      - name: Pull a JavaFX JDK
        run: wget http://static.azul.com/zulu/bin/zulu8.33.0.1-ca-fx-jdk8.0.192-linux_x64.tar.gz
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
          jdkFile: ./zulu8.33.0.1-ca-fx-jdk8.0.192-linux_x64.tar.gz
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Check output
        env:
          VERSION_SEMVER: ${{ steps.vars.outputs.tag }}
        run: |
          echo $VERSION_SEMVER
          echo ${{ steps.vars.outputs.tag }}
      - name: Print Working Dir
        run: |
             ls -al .
             sudo apt install gnupg1

      - name: start xvfb
        run:
          Xvfb :0 &

      - name: initialize the X11 DISPLAY variable
        run:
          export DISPLAY=:0

      - name: Install libraries
        run: |
          sudo apt update
          sudo apt install libgtk2.0-0

      - name: Test with Gradle
        run: xvfb-run -s '-screen 0 1024x768x24' ./gradlew test

      - name: Publish package
        run: bash publish.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION_SEMVER: ${{ steps.vars.outputs.tag }}
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          OSSRH_GPG_SECRET_KEY:  ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          OSSRH_GPG_SECRET_KEY_PASSWORD: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
          OSSRH_GPG_SECRET_KEY_ID: ${{ secrets.OSSRH_GPG_SECRET_KEY_ID }}
          
      - name: Print Output Dir
        run: |
             ls -al
             ls -al build
             ls -al build/libs/
             
      - name: Make gitHub release
        uses: actions/create-release@v1
        id: create_release
        with:
               draft: false
               prerelease: false
               release_name: ${{ steps.version.outputs.version }}
               tag_name: ${{ github.ref }}
        env:
               GITHUB_TOKEN: ${{ github.token }}
               
          
